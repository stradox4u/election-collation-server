// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PollingUnit {
  id  String  @default(uuid())  @id
  state String
  lga String
  ward  String
  puNumber String
  puName String
  createdAt DateTime  @default(now())
  elections ElectionPollingUnit[]
  unitResults UnitResult[]

  @@index([state, lga, ward, puNumber])
}

model Election {
  id  String  @default(uuid()) @id
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  electionType  String
  electionDate  DateTime
  pollinUnits ElectionPollingUnit[]
  unitResults UnitResult[]

  @@index([electionType, electionDate])
}

model ElectionPollingUnit {
  id  Int @id @default(autoincrement())
  election  Election  @relation(fields: [electionId], references: [id])
  electionId  String
  pollingUnit PollingUnit @relation(fields: [pollingunitId], references: [id])
  pollingunitId String
  assignedAt  DateTime  @default(now())

  @@index([electionId, pollingunitId])
}

model UnitResult {
  id  String  @default(uuid())  @id
  A Int?
  AA  Int?
  AAC Int?
  ADC Int?
  ADP Int?
  APC Int?
  APGA  Int?
  APM Int?
  APP Int?
  BP  Int?
  LP  Int?
  NNPP  Int?
  NRM Int?
  PDP Int?
  PRP Int?
  SDP Int?
  YPP Int?
  ZLP Int?
  resultImage String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  pollingUnit PollingUnit @relation(fields: [pollingunitId], references: [id])
  pollingunitId String
  election Election @relation(fields: [electionId], references: [id])
  electionId  String
}
